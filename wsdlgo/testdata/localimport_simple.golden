// Code generated by wsdl2go. DO NOT EDIT.

package empbinding

import (
	"github.com/zaininfo/wsdl2go/soap"
)

// Namespace was auto-generated from WSDL.
var Namespace = "http://example.com/employee.xsd"

// NewEmpPortType creates an initializes a EmpPortType.
func NewEmpPortType(cli *soap.Client) EmpPortType {
	return &empPortType{cli}
}

// EmpPortType was auto-generated from WSDL
// and defines interface for the remote service. Useful for testing.
type EmpPortType interface {
	// EmployeeNameRequest was auto-generated from WSDL.
	EmployeeNameRequest(EmployeeId EmployeeId) (EmployeeName, error)
}

// EmployeeId was auto-generated from WSDL.
type EmployeeId string

// EmployeeName was auto-generated from WSDL.
type EmployeeName string

// Operation wrapper for EmployeeNameRequest.
// OperationEmployeeNameRequest was auto-generated from WSDL.
type OperationEmployeeNameRequest struct {
	EmployeeId *EmployeeId `xml:"employee-id,omitempty" json:"employee-id,omitempty" yaml:"employee-id,omitempty"`
}

// Operation wrapper for EmployeeNameRequest.
// OperationEmployeeNameReply was auto-generated from WSDL.
type OperationEmployeeNameReply struct {
	EmployeeName *EmployeeName `xml:"employee-name,omitempty" json:"employee-name,omitempty" yaml:"employee-name,omitempty"`
}

// empPortType implements the EmpPortType interface.
type empPortType struct {
	cli *soap.Client
}

// EmployeeNameRequest was auto-generated from WSDL.
func (p *empPortType) EmployeeNameRequest(EmployeeId EmployeeId) (EmployeeName, error) {
	α := struct {
		OperationEmployeeNameRequest `xml:"emp:employee-name-request"`
	}{
		OperationEmployeeNameRequest{
			&EmployeeId,
		},
	}

	γ := struct {
		OperationEmployeeNameReply `xml:"employee-name-requestResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://example.com/processMessage", α, &γ); err != nil {
		return &EmployeeName{}, err
	}
	return *γ.EmployeeName, nil
}
